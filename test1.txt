function Import-DataTableToSql {
    param(
        [System.Data.DataTable]$dataTable,
        [string]$connectionString,
        [string]$tableName
    )

    # Create an instance of SqlBulkCopy
    $bulkCopy = New-Object Data.SqlClient.SqlBulkCopy($connectionString, [System.Data.SqlClient.SqlBulkCopyOptions]::KeepIdentity)
    $bulkCopy.DestinationTableName = $tableName

    # Adding a try-catch block to handle potential errors during the bulk copy operation
    try {
        # Perform the bulk copy operation
        $bulkCopy.WriteToServer($dataTable)
        Write-Host "Data successfully imported to SQL Server."
    } catch {
        Write-Error "An error occurred during the bulk copy operation: $_"
    } finally {
        $bulkCopy.Close()
    }
}


function CreateAndPopulateDataTable {
    param([Parameter(Mandatory=$true)][object[]]$data)

    $dataTable = New-Object System.Data.DataTable
    $dataTable.Columns.Add("Timestamp", [System.DateTime])
    $dataTable.Columns.Add("Name", [System.String])
    $dataTable.Columns.Add("Value", [System.Double])
    $dataTable.Columns.Add("Units", [System.String])
    $dataTable.Columns.Add("GroupId", [System.String])
    $dataTable.Columns.Add("HostId", [System.String])
    $dataTable.Columns.Add("ProcessId", [System.String])

    foreach ($item in $data) {
        $row = $dataTable.NewRow()
        $row["Timestamp"] = [DateTime]$item.Timestamp
        $row["Name"] = $item.Name
        $row["Value"] = [double]$item.Value
        $row["Units"] = $item.Units
        $row["GroupId"] = $item.GroupId
        $row["HostId"] = $item.HostId
        $row["ProcessId"] = $item.ProcessId
        $dataTable.Rows.Add($row)
    }

    return $dataTable
}



$dataTable = CreateAndPopulateDataTable -data $data
foreach ($row in $dataTable.Rows) {
    Write-Host "Row data: $($row["Timestamp"]), $($row["Name"]), $($row["Value"]), $($row["Units"]), $($row["GroupId"]), $($row["HostId"]), $($row["ProcessId"])"
}

Import-DataTableToSql -dataTable $dataTable -connectionString $connectionString -tableName $tableName
