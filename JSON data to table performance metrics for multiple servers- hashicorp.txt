# Load required modules
Import-Module VaultSharp
Import-Module SqlServer
Import-Module Az.Accounts
Import-Module Az.Resources

# Function to retrieve SQL Server connection details from HashiCorp Vault
function Get-SqlServerConnectionDetails {
    param (
        [string]$vaultAddress,
        [string]$vaultToken,
        [string]$secretPath
    )

    # Initialize the Vault client
    $vaultClient = New-Object VaultSharp.VaultClient.VaultClient -ArgumentList $vaultAddress
    $vaultClient.AuthenticateWithToken($vaultToken)

    # Retrieve the SQL Server connection details from HashiCorp Vault
    $sqlServerDetails = $vaultClient.Secret.Read($secretPath).Data

    return $sqlServerDetails
}

# Function to retrieve Atlas API key from HashiCorp Vault
function Get-AtlasApiKey {
    param (
        [string]$vaultAddress,
        [string]$vaultToken,
        [string]$apiKeyPath
    )

    # Initialize the Vault client
    $vaultClient = New-Object VaultSharp.VaultClient.VaultClient -ArgumentList $vaultAddress
    $vaultClient.AuthenticateWithToken($vaultToken)

    # Retrieve the Atlas API key from HashiCorp Vault
    $apiKey = $vaultClient.Secret.Read($apiKeyPath).Data.value

    return $apiKey
}

# Function to insert data into SQL Server table
function Insert-DataIntoSqlServer {
    param (
        [string]$sqlConnectionString,
        [object]$data
    )

    # Create a SqlConnection object
    $sqlConnection = New-Object System.Data.SqlClient.SqlConnection($sqlConnectionString)

    # Open the SQL connection
    $sqlConnection.Open()

    # Define the SQL query to insert data into the table
    $sqlInsertQuery = "INSERT INTO Measurement (groupId, hostId, processId, name, timestamp, value, units) VALUES (@groupId, @hostId, @processId, @name, @timestamp, @value, @units)"

    # Create a SqlCommand object
    $sqlCommand = $sqlConnection.CreateCommand()
    $sqlCommand.CommandText = $sqlInsertQuery

    # Iterate over the measurements in the JSON and insert data into the SQL table
    $data.measurements | ForEach-Object {
        $name = $_.name
        $_.dataPoints | ForEach-Object {
            $sqlCommand.Parameters.Clear()
            $sqlCommand.Parameters.AddWithValue("@groupId", $data.groupId)
            $sqlCommand.Parameters.AddWithValue("@hostId", $data.hostId)
            $sqlCommand.Parameters.AddWithValue("@processId", $data.processId)
            $sqlCommand.Parameters.AddWithValue("@name", $name)
            $sqlCommand.Parameters.AddWithValue("@timestamp", [datetime]$_.timestamp)
            $sqlCommand.Parameters.AddWithValue("@value", [float]$_.value)
            $sqlCommand.Parameters.AddWithValue("@units", $_.units)

            $sqlCommand.ExecuteNonQuery()
        }
    }

    # Close the SQL connection
    $sqlConnection.Close()

    Write-Output "Data inserted into SQL Server table successfully."
}

# Define the list of servers
$servers = @(
    @{
        GroupId = "<Group ID 1>"
        HostId = "<Host ID 1>"
        SecretPath = "<Secret Path 1>"
        ApiKeyPath = "<API Key Path 1>"
    },
    @{
        GroupId = "<Group ID 2>"
        HostId = "<Host ID 2>"
        SecretPath = "<Secret Path 2>"
        ApiKeyPath = "<API Key Path 2>"
    }
    # Add more servers as needed
)

# Loop through each server
foreach ($server in $servers) {
    # Retrieve SQL Server connection details from HashiCorp Vault
    $sqlServerDetails = Get-SqlServerConnectionDetails -vaultAddress $server.vaultAddress -vaultToken $server.vaultToken -secretPath $server.SecretPath

    # Retrieve Atlas API key from HashiCorp Vault
    $apiKey = Get-AtlasApiKey -vaultAddress $server.vaultAddress -vaultToken $server.vaultToken -apiKeyPath $server.ApiKeyPath

    # Create the SQL Server connection string
    $sqlConnectionString = "Server=$($sqlServerDetails.Server);Database=$($sqlServerDetails.Database);User Id=$($sqlServerDetails.Username);Password=$($sqlServerDetails.Password)"

    # Retrieve JSON data from Atlas API
    $headers = @{
        "Content-Type" = "application/json"
        "Authorization" = "Bearer $apiKey"
    }
    $url = "https://cloud.mongodb.com/api/atlas/v2.0/groups/$($server.GroupId)/processes/$($server.HostId)/measurements"
    $jsonData = Invoke-RestMethod -Uri $url -Headers $headers -Method Get

    # Insert data into SQL Server table
    Insert-DataIntoSqlServer -sqlConnectionString $sqlConnectionString -data $jsonData
}
